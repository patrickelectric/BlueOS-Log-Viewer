[package]
name = "blueos-log-viewer"
version = "0.1.0"
authors = ["Emil Ernerfeldt <emil.ernerfeldt@gmail.com>"]
edition = "2021"
include = ["LICENSE-APACHE", "LICENSE-MIT", "**/*.rs", "Cargo.toml"]
rust-version = "1.76"

[package.metadata.docs.rs]
all-features = true
targets = ["x86_64-unknown-linux-gnu", "wasm32-unknown-unknown"]

[dependencies]
egui = "0.27"
log = "0.4"

# You only need serde if you want app persistence:
serde = { version = "1", features = ["derive"] }

async-std = "1.12.0"
egui_dock = { version = "0.12", features = ["serde"] }
egui_extras = "0.27"

# Parser
chrono = { version = "0.4", features = ["serde"] }
dateparser = "0.2.1"
regex = "1"
flate2 = "1.0"
zip = { version = "1.1.1", default-features = false, features = [ "deflate" ] }
rfd = "0.14"
bytesize = "1.3.0"
humantime = "2.1.0"
strum = "0.26.2"
strum_macros = "0.26.2"

# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
env_logger = "0.10"
tokio = { version = "1.36", features = ["full"] }
eframe = "0.27"

# web:
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen-futures = "0.4"
tokio_with_wasm = "0.4.3"
wasm-logger = "0.2.0"
eframe = { version = "0.27", default-features = false, features = [
    "accesskit",     # Make egui comptaible with screen readers. NOTE: adds a lot of dependencies.
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
    "persistence",   # Enable restoring app state when restarting the app.
] }


[profile.release]
opt-level = 2 # fast and small wasm

# Optimize all dependencies even in debug builds:
[profile.dev.package."*"]
opt-level = 2


[patch.crates-io]

# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "master" }
# eframe = { git = "https://github.com/emilk/egui", branch = "master" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/crates/egui" }
# eframe = { path = "../egui/crates/eframe" }
